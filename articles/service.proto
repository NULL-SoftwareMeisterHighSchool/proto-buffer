syntax = "proto3";
package articles;

option go_package = "github.com/NULL-SoftwareMeisterHighSchool/Project_FileServer/common/grpc/server/articles/pb;articles_pb";

import "google/protobuf/timestamp.proto";

message Duration {
    google.protobuf.Timestamp start = 1;
    google.protobuf.Timestamp end = 2;
}

message StatusResponse {
    uint32 status = 1;
}

enum ArticleType {
    GENERAL = 0;
    TECH = 1;
}

message CreateArticleRequest {
    uint32 authorID = 1;
    ArticleType type = 2;
    string title = 3;
}

enum ListArticleOrder {
    POPULARITY = 0;
    TIME = 1;
    RELEVANCE = 2;
}

message ListArticleRequest {
    uint32 offset = 1;
    uint32 amount = 2;
    ListArticleOrder order = 3;
    optional uint32 userID = 4;

    // filters
    optional ArticleType type = 5;
    optional uint32 authorID = 6;
    optional bool isPrivate = 7;
    optional Duration duration = 8;   // 시작일 ~ 종료일
}

message ListArticleElement {
    uint32 articleID = 1;
    uint32 authorID = 2;
    string title = 3;
    string summary = 4;
    ArticleType type = 5;
    google.protobuf.Timestamp createdAt = 6;
    google.protobuf.Timestamp updatedAt = 7;
    bool isPrivate = 8;
    uint64 views = 9;
    uint32 likes = 10;
}

message ListArticleResponse {
    repeated ListArticleElement articles = 1;
}


message GetArticleRequest {
    uint32 articleID = 1;
    optional uint32 userID = 2;
}

message GetArticleResponse {
    uint32 status = 1;
    uint32 articleID = 2;
    uint32 authorID = 3;
    ArticleType type = 4;
    string title = 5;
    google.protobuf.Timestamp createdAt = 6;
    google.protobuf.Timestamp updatedAt = 7;
    string body = 8;
    uint64 views = 9;
    uint32 likes = 10;
    bool isPrivate = 11;
    bool isLiked = 12;
}

message SetArticleVisibilityRequest {
    uint32 articleID = 1;
    uint32 userID = 2;
    bool isPrivate = 3;
}

message UpdateArticleBodyRequest {
    uint32 articleID = 1;
    uint32 userID = 2;
    string body = 3;
}

message UpdateArticleTitleRequest {
    uint32 articleID = 1;
    uint32 userID = 2;
    string title = 3;
}

message DeleteArticleRequest {
    uint32 articleID = 1;
    uint32 userID = 2;
}

message ToggleArticleLikeRequest {
    uint32 articleID = 1;
    uint32 userID = 2;
}


service ArticleService {
    rpc CreateArticle(CreateArticleRequest) returns (StatusResponse);
    rpc ListArticle(ListArticleRequest) returns (ListArticleResponse);
    rpc GetArticle(GetArticleRequest) returns (GetArticleResponse);
    rpc UpdateArticleBody(UpdateArticleBodyRequest) returns (StatusResponse);
    rpc UpdateArticleTitle (UpdateArticleTitleRequest) returns (StatusResponse);
    rpc DeleteArticle(DeleteArticleRequest) returns (StatusResponse);
    rpc SetArticleVisibility (SetArticleVisibilityRequest) returns (StatusResponse);
    rpc ToggleArticleLike(ToggleArticleLikeRequest) returns (StatusResponse);
}
